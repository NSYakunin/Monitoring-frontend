import React, { useEffect, useState } from 'react'
import { useNavigate } from 'react-router-dom'
import { getWorkItemsByDivision, WorkItemDto } from '../../api/workItemsApi'
import './HomePage.css'

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è "—Ñ–∏–ª—å—Ç—Ä–æ–≤", –µ—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ —Ä–∞—Å—à–∏—Ä—è—Ç—å
interface FilterState {
	divisionId: number
	startDate: string
	endDate: string
	executor: string
	approver: string
	search: string
}

const HomePage: React.FC = () => {
	const navigate = useNavigate()
	// –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ä–∞–±–æ—Ç
	const [workItems, setWorkItems] = useState<WorkItemDto[]>([])

	// –§–∏–ª—å—Ç—Ä—ã (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)
	const [filters, setFilters] = useState<FilterState>({
		divisionId: 15,
		startDate: '',
		endDate: '',
		executor: '',
		approver: '',
		search: '',
	})

	// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ, –∫–æ–≥–¥–∞ –º–µ–Ω—è–µ—Ç—Å—è divisionId
	// (–∏–ª–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ)
	useEffect(() => {
		const token = localStorage.getItem('jwtToken')
		    if (!token) {
					navigate('/login') // –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞, –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
				}
		if (!filters.divisionId) return

		getWorkItemsByDivision(filters.divisionId)
			.then(data => {
				console.log('–ü—Ä–∏—à–ª–∏ –¥–∞–Ω–Ω—ã–µ:', data) // <-- –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
				setWorkItems(data)
			})
			.catch(err => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:', err))
	}, [filters.divisionId])

	// –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
	const handleChange = (
		e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>
	) => {
		const { name, value } = e.target
		setFilters(prev => ({
			...prev,
			[name]: value,
		}))
	}

	// –ü–æ–∫–∞ –Ω–µ –¥–µ–ª–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ ‚Äì –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
	const handleSearchClick = () => {
		console.log('–ü–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞: –ø—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã:', filters)
	}

	return (
		<div>
			<h1>–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (React/TS)</h1>

			{/* –ë–ª–æ–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤ */}
			<div className='mb-4 filters-container'>
				<form className='d-flex flex-wrap align-items-end gap-3'>
					<div className='filter-block'>
						<label htmlFor='startDate' className='form-label'>
							C –¥–∞—Ç—ã:
						</label>
						<input
							type='date'
							id='startDate'
							name='startDate'
							value={filters.startDate}
							onChange={handleChange}
							className='form-control'
						/>
					</div>

					<div className='filter-block'>
						<label htmlFor='endDate' className='form-label'>
							–ü–æ –¥–∞—Ç—É:
						</label>
						<input
							type='date'
							id='endDate'
							name='endDate'
							value={filters.endDate}
							onChange={handleChange}
							className='form-control'
						/>
					</div>

					<div className='filter-block'>
						<label htmlFor='divisionId' className='form-label'>
							–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ:
						</label>
						<select
							id='divisionId'
							name='divisionId'
							value={String(filters.divisionId)}
							onChange={e =>
								setFilters(prev => ({
									...prev,
									divisionId: Number(e.target.value),
								}))
							}
							className='form-select'
						>
							<option value='15'>–û—Ç–¥–µ–ª 15</option>
							<option value='555'>–û—Ç–¥–µ–ª 555</option>
							<option value='777'>–û—Ç–¥–µ–ª 777</option>
						</select>
					</div>

					<div className='filter-block'>
						<label htmlFor='executor' className='form-label'>
							–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:
						</label>
						<select
							id='executor'
							name='executor'
							value={filters.executor}
							onChange={handleChange}
							className='form-select'
						>
							<option value=''>–í—Å–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏</option>
							<option value='–ò–≤–∞–Ω–æ–≤'>–ò–≤–∞–Ω–æ–≤</option>
							<option value='–ü–µ—Ç—Ä–æ–≤'>–ü–µ—Ç—Ä–æ–≤</option>
						</select>
					</div>

					<div className='filter-block'>
						<label htmlFor='approver' className='form-label'>
							–ü—Ä–∏–Ω–∏–º–∞—é—â–∏–π:
						</label>
						<select
							id='approver'
							name='approver'
							value={filters.approver}
							onChange={handleChange}
							className='form-select'
						>
							<option value=''>–í—Å–µ –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–µ</option>
							<option value='–°–∏–¥–æ—Ä–æ–≤'>–°–∏–¥–æ—Ä–æ–≤</option>
							<option value='–°–º–∏—Ä–Ω–æ–≤'>–°–º–∏—Ä–Ω–æ–≤</option>
						</select>
					</div>

					<div className='filter-block'>
						<label htmlFor='search' className='form-label'>
							–ü–æ–∏—Å–∫:
						</label>
						<input
							type='text'
							id='search'
							name='search'
							value={filters.search}
							onChange={handleChange}
							placeholder='–ü–æ–∏—Å–∫...'
							className='form-control'
						/>
					</div>

					<div>
						<button
							type='button'
							className='btn btn-primary'
							onClick={handleSearchClick}
						>
							–ü—Ä–∏–º–µ–Ω–∏—Ç—å
						</button>
					</div>
				</form>
			</div>

			{/* –¢–∞–±–ª–∏—Ü–∞ */}
			<div className='table-responsive'>
				<table className='table table-bordered table-hover sticky-header-table'>
					<thead>
						<tr className='custom-header'>
							<th>‚Ññ</th>
							<th>–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞</th>
							<th>–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã</th>
							<th>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏</th>
							<th>–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—â–∏–π</th>
							<th>–ü—Ä–∏–Ω–∏–º–∞—é—â–∏–π</th>
							<th>–ü–ª–∞–Ω</th>
							<th>–ö–æ—Ä—Ä1</th>
							<th>–ö–æ—Ä—Ä2</th>
							<th>–ö–æ—Ä—Ä3</th>
							<th>
								<span className='toggle-all-btn' title='–í—ã–¥–µ–ª–∏—Ç—å/—Å–Ω—è—Ç—å –≤—Å–µ'>
									üìå
								</span>
							</th>
						</tr>
					</thead>
					<tbody>
						{workItems.map((item, index) => {
							// –ü—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –º–æ–∂–Ω–æ –Ω–∞–≤–µ—Å–∏—Ç—å —É—Å–ª–æ–≤–Ω—É—é –ø–æ–¥—Å–≤–µ—Ç–∫—É
							const highlightClass = ''

							return (
								<tr key={index} className={highlightClass}>
									<td>{index + 1}</td>
									<td>{item.documentName}</td>
									<td>{item.workName}</td>
									<td>
										{item.executor?.split(',').map((ex, i) => (
											<div key={i}>{ex.trim()}</div>
										))}
									</td>
									<td>{item.controller}</td>
									<td>{item.approver}</td>
									<td>{item.planDate}</td>
									<td>{item.korrect1}</td>
									<td>{item.korrect2}</td>
									<td>{item.korrect3}</td>
									<td>
										<input type='checkbox' />
										<button
											type='button'
											className='btn btn-sm btn-outline-secondary ms-2'
										>
											üìù
										</button>
									</td>
								</tr>
							)
						})}
					</tbody>
				</table>
			</div>
		</div>
	)
}

export default HomePage
